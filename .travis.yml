language:
  - php
  - npm
services: docker
php:
- 7.0
env:
  DOCKER_COMPOSE_VERSION: 1.6.2
  APP_ENV: local
  APP_DEBUG: true
  CACHE_DRIVER: array
  QUEUE_DRIVER: redis
before_install:
  - export DOCKER_REPO="${TRAVIS_REPO_SLUG,,}"
  - export IMAGE_SLUG="$TRAVIS_BRANCH.${TRAVIS_COMMIT::8}.${TRAVIS_BUILD_ID}"
  # Upgrade docker/docker-compose versions so we can use v2 of the Dockerfile format
  - docker -v
  - sudo apt-get -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install docker-engine=1.10.3-0~trusty
  - docker -v
  - sudo rm /usr/local/bin/docker-compose
  - curl -L "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m`" > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - cp .env.example .env
  # pass environment variables in travis to the app
  - sed -ri 's/^PRIVATE_KEY=/PRIVATE_KEY=\$PRIVATE_KEY/' .env \
  - sed -ri 's/^AWS_KEY=/AWS_KEY=\$AWS_KEY/' .env \
  - sed -ri 's/^AWS_SECRET=/AWS_SECRET=\$AWS_SECRET/' .env \
  # Stop the postgres instance travis sets up automatically
  - sudo /etc/init.d/postgresql stop
  # set env vars in the build settings to interact with repositories
  # see https://docs.travis-ci.com/user/environment-variables/#Defining-Variables-in-Repository-Settings
  - docker login -e="$DOCKER_EMAIL" -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
  # Start the docker stuff
  - docker-compose -v
  - docker-compose up -d
  - sleep 4
  - docker-compose ps
install:
  # Install dev php dependencies
  - docker exec -it --user=www-data $(docker-compose ps -q fpm) composer install --no-interaction --prefer-dist
script:
  # Ensure phpcs triggers a failing build
  - docker exec -it --user=www-data $(docker-compose ps -q fpm) vendor/bin/phpcs --config-set ignore_warnings_on_exit 1
  # Ensure breaking PSR2 compliance fails in CI
  - docker exec -it --user=www-data $(docker-compose ps -q fpm) vendor/bin/phpcs --standard=PSR2 --ignore=app/Http/routes.php app
  # Run tests
  - docker exec -it --user=www-data $(docker-compose ps -q fpm) vendor/bin/phpunit --testsuite=unit
deploy:
  provider: script
  api_key: "$GITHUB_API_TOKEN"
  script: docker images && docker tag "${DOCKER_REPO}:fpm" "${DOCKER_REPO}:${TRAVIS_TAG}" && docker push "${DOCKER_REPO}:${TRAVIS_TAG}"
  skip_cleanup: false
  on:
    tags: true
notifications:
  slack:
    secure: ${SLACK_KEY}
