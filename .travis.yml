language:
  - php
  - npm
services: docker
php:
- 7.0
env:
  APP_ENV: local
  APP_DEBUG: true
  CACHE_DRIVER: array
  QUEUE_DRIVER: redis
before_install:
  - export DOCKER_REPO="${TRAVIS_REPO_SLUG,,}"
  - export IMAGE_SLUG="$TRAVIS_BRANCH.${TRAVIS_COMMIT::8}.${TRAVIS_BUILD_ID}"
  - cp .env.example .env
  # pass environment variables in travis to the app
  - sed -ri "s|AWS_KEY=|AWS_KEY=$AWS_KEY|" .env
  - sed -ri "s|AWS_SECRET=|AWS_SECRET=$AWS_SECRET|" .env
  - sed -ri "s|PRIVATE_KEY=|PRIVATE_KEY=$PRIVATE_KEY|" .env
  # Stop the postgres instance travis sets up automatically
  - sudo /etc/init.d/postgresql stop
  - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
  # Start the docker stuff
  - docker-compose -v
  - docker-compose up -d
  - sleep 4
  - docker-compose ps
install:
  # Install dev php dependencies
  - docker-compose exec --user www-data web sh -c "composer install --no-interaction --prefer-dist"
script:
  # Ensure phpcs triggers a failing build
  - docker-compose exec --user www-data web sh -c "vendor/bin/phpcs --config-set ignore_warnings_on_exit 1"
  # Ensure breaking PSR2 compliance fails in CI
  - docker-compose exec --user www-data web sh -c "vendor/bin/phpcs --standard=PSR2 --ignore=app/Http/routes.php app"
  # Run tests
  - docker-compose exec --user www-data web sh -c "vendor/bin/phpunit"
deploy:
  provider: script
  api_key: "$GITHUB_API_TOKEN"
  script: docker images && docker tag "${DOCKER_REPO}:web" "${DOCKER_REPO}:${TRAVIS_TAG}" && docker push "${DOCKER_REPO}:${TRAVIS_TAG}"
  skip_cleanup: false
  on:
    tags: true